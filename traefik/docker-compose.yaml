version: "3.3"

services:

  traefik:
    image: "traefik:v3.0"
    container_name: "traefik"
    restart: unless-stopped
    networks:
      - traefik
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=traefik"
      - "--global.sendanonymoususage=false"
      - "--global.checknewversion=false"
    labels:
      - "traefik.http.routers.traefik-dashboard.entrypoints=http"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`radxa`)"
      - "traefik.http.routers.traefik-dashboard.service=dashboard@internal"
      - "traefik.http.routers.traefik-dashboard-api.entrypoints=http"
      - "traefik.http.routers.traefik-dashboard-api.rule=Host(`radxa`) && PathPrefix(`/api`)"
      - "traefik.http.routers.traefik-dashboard-api.service=api@internal"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    logging:
      driver: "json-file"
      options:
        max-size: "1m"

  whoami:
    image: "traefik/whoami"
    container_name: "simple-service"
    restart: unless-stopped
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`radxa`) && PathPrefix(`/whoami`)"
      - "traefik.http.routers.whoami.entrypoints=web"

networks:
  traefik:
    external: true
